// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.7
// source: api.proto

package httppb

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type APIErrorReason int32

const (
	APIErrorReason_BAD_REQUEST                     APIErrorReason = 0
	APIErrorReason_AUTHENTICATION_FAILED           APIErrorReason = 1
	APIErrorReason_AUTHORIZATION_FAILED            APIErrorReason = 2
	APIErrorReason_NOT_FOUND                       APIErrorReason = 3
	APIErrorReason_METHOD_NOT_ALLOWED              APIErrorReason = 4
	APIErrorReason_NOT_ACCEPTABLE                  APIErrorReason = 5
	APIErrorReason_REQUEST_TIMEOUT                 APIErrorReason = 6
	APIErrorReason_CONFLICT                        APIErrorReason = 7
	APIErrorReason_GONE                            APIErrorReason = 8
	APIErrorReason_LENGTH_REQUIRED                 APIErrorReason = 9
	APIErrorReason_PRECONDITION_FAILED             APIErrorReason = 10
	APIErrorReason_REQUEST_ENTITY_TOO_LARGE        APIErrorReason = 11
	APIErrorReason_REQUEST_URI_TOO_LONG            APIErrorReason = 12
	APIErrorReason_UNSUPPORTED_MEDIA_TYPE          APIErrorReason = 13
	APIErrorReason_REQUESTED_RANGE_NOT_SATISFIABLE APIErrorReason = 14
	APIErrorReason_EXPECTATION_FAILED              APIErrorReason = 15
	APIErrorReason_MISDIRECTED_REQUEST             APIErrorReason = 16
	APIErrorReason_UNPROCESSABLE_ENTITY            APIErrorReason = 17
	APIErrorReason_LOCKED                          APIErrorReason = 18
	APIErrorReason_FAILED_DEPENDENCY               APIErrorReason = 19
	APIErrorReason_UPGRADE_REQUIRED                APIErrorReason = 20
	APIErrorReason_PRECONDITION_REQUIRED           APIErrorReason = 21
	APIErrorReason_TOO_MANY_REQUESTS               APIErrorReason = 22
	APIErrorReason_REQUEST_HEADER_FIELDS_TOO_LARGE APIErrorReason = 23
	APIErrorReason_UNAVAILABLE_FOR_LEGAL_REASONS   APIErrorReason = 24
	APIErrorReason_INTERNAL_SERVER_ERROR           APIErrorReason = 25
	APIErrorReason_NOT_IMPLEMENTED                 APIErrorReason = 26
	APIErrorReason_BAD_GATEWAY                     APIErrorReason = 27
	APIErrorReason_SERVICE_UNAVAILABLE             APIErrorReason = 28
	APIErrorReason_GATEWAY_TIMEOUT                 APIErrorReason = 29
	APIErrorReason_HTTP_VERSION_NOT_SUPPORTED      APIErrorReason = 30
	APIErrorReason_VARIANT_ALSO_NEGOTIATES         APIErrorReason = 31
	APIErrorReason_INSUFFICIENT_STORAGE            APIErrorReason = 32
	APIErrorReason_LOOP_DETECTED                   APIErrorReason = 33
	APIErrorReason_NOT_EXTENDED                    APIErrorReason = 34
	APIErrorReason_NETWORK_AUTHENTICATION_REQUIRED APIErrorReason = 35
)

// Enum value maps for APIErrorReason.
var (
	APIErrorReason_name = map[int32]string{
		0:  "BAD_REQUEST",
		1:  "AUTHENTICATION_FAILED",
		2:  "AUTHORIZATION_FAILED",
		3:  "NOT_FOUND",
		4:  "METHOD_NOT_ALLOWED",
		5:  "NOT_ACCEPTABLE",
		6:  "REQUEST_TIMEOUT",
		7:  "CONFLICT",
		8:  "GONE",
		9:  "LENGTH_REQUIRED",
		10: "PRECONDITION_FAILED",
		11: "REQUEST_ENTITY_TOO_LARGE",
		12: "REQUEST_URI_TOO_LONG",
		13: "UNSUPPORTED_MEDIA_TYPE",
		14: "REQUESTED_RANGE_NOT_SATISFIABLE",
		15: "EXPECTATION_FAILED",
		16: "MISDIRECTED_REQUEST",
		17: "UNPROCESSABLE_ENTITY",
		18: "LOCKED",
		19: "FAILED_DEPENDENCY",
		20: "UPGRADE_REQUIRED",
		21: "PRECONDITION_REQUIRED",
		22: "TOO_MANY_REQUESTS",
		23: "REQUEST_HEADER_FIELDS_TOO_LARGE",
		24: "UNAVAILABLE_FOR_LEGAL_REASONS",
		25: "INTERNAL_SERVER_ERROR",
		26: "NOT_IMPLEMENTED",
		27: "BAD_GATEWAY",
		28: "SERVICE_UNAVAILABLE",
		29: "GATEWAY_TIMEOUT",
		30: "HTTP_VERSION_NOT_SUPPORTED",
		31: "VARIANT_ALSO_NEGOTIATES",
		32: "INSUFFICIENT_STORAGE",
		33: "LOOP_DETECTED",
		34: "NOT_EXTENDED",
		35: "NETWORK_AUTHENTICATION_REQUIRED",
	}
	APIErrorReason_value = map[string]int32{
		"BAD_REQUEST":                     0,
		"AUTHENTICATION_FAILED":           1,
		"AUTHORIZATION_FAILED":            2,
		"NOT_FOUND":                       3,
		"METHOD_NOT_ALLOWED":              4,
		"NOT_ACCEPTABLE":                  5,
		"REQUEST_TIMEOUT":                 6,
		"CONFLICT":                        7,
		"GONE":                            8,
		"LENGTH_REQUIRED":                 9,
		"PRECONDITION_FAILED":             10,
		"REQUEST_ENTITY_TOO_LARGE":        11,
		"REQUEST_URI_TOO_LONG":            12,
		"UNSUPPORTED_MEDIA_TYPE":          13,
		"REQUESTED_RANGE_NOT_SATISFIABLE": 14,
		"EXPECTATION_FAILED":              15,
		"MISDIRECTED_REQUEST":             16,
		"UNPROCESSABLE_ENTITY":            17,
		"LOCKED":                          18,
		"FAILED_DEPENDENCY":               19,
		"UPGRADE_REQUIRED":                20,
		"PRECONDITION_REQUIRED":           21,
		"TOO_MANY_REQUESTS":               22,
		"REQUEST_HEADER_FIELDS_TOO_LARGE": 23,
		"UNAVAILABLE_FOR_LEGAL_REASONS":   24,
		"INTERNAL_SERVER_ERROR":           25,
		"NOT_IMPLEMENTED":                 26,
		"BAD_GATEWAY":                     27,
		"SERVICE_UNAVAILABLE":             28,
		"GATEWAY_TIMEOUT":                 29,
		"HTTP_VERSION_NOT_SUPPORTED":      30,
		"VARIANT_ALSO_NEGOTIATES":         31,
		"INSUFFICIENT_STORAGE":            32,
		"LOOP_DETECTED":                   33,
		"NOT_EXTENDED":                    34,
		"NETWORK_AUTHENTICATION_REQUIRED": 35,
	}
)

func (x APIErrorReason) Enum() *APIErrorReason {
	p := new(APIErrorReason)
	*p = x
	return p
}

func (x APIErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (APIErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (APIErrorReason) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x APIErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use APIErrorReason.Descriptor instead.
func (APIErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

type OperationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *OperationResponse) Reset() {
	*x = OperationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationResponse) ProtoMessage() {}

func (x *OperationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationResponse.ProtoReflect.Descriptor instead.
func (*OperationResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *OperationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type FuzzySearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keywords string   `protobuf:"bytes,1,opt,name=Keywords,proto3" json:"Keywords,omitempty"`
	Field    []string `protobuf:"bytes,2,rep,name=field,proto3" json:"field,omitempty"`
}

func (x *FuzzySearchRequest) Reset() {
	*x = FuzzySearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FuzzySearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FuzzySearchRequest) ProtoMessage() {}

func (x *FuzzySearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FuzzySearchRequest.ProtoReflect.Descriptor instead.
func (*FuzzySearchRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *FuzzySearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *FuzzySearchRequest) GetField() []string {
	if x != nil {
		return x.Field
	}
	return nil
}

type AdvancedFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field    string     `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Operator string     `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	Value    *anypb.Any `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AdvancedFilterRequest) Reset() {
	*x = AdvancedFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdvancedFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdvancedFilterRequest) ProtoMessage() {}

func (x *AdvancedFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdvancedFilterRequest.ProtoReflect.Descriptor instead.
func (*AdvancedFilterRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *AdvancedFilterRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *AdvancedFilterRequest) GetOperator() string {
	if x != nil {
		return x.Operator
	}
	return ""
}

func (x *AdvancedFilterRequest) GetValue() *anypb.Any {
	if x != nil {
		return x.Value
	}
	return nil
}

type SortRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Field string `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	Order string `protobuf:"bytes,2,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *SortRequest) Reset() {
	*x = SortRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SortRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SortRequest) ProtoMessage() {}

func (x *SortRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SortRequest.ProtoReflect.Descriptor instead.
func (*SortRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *SortRequest) GetField() string {
	if x != nil {
		return x.Field
	}
	return ""
}

func (x *SortRequest) GetOrder() string {
	if x != nil {
		return x.Order
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6b, 0x72, 0x61,
	0x74, 0x6f, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x11, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x46, 0x0a, 0x12, 0x46, 0x75, 0x7a, 0x7a, 0x79,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0x75, 0x0a, 0x15, 0x41, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x41, 0x6e, 0x79, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x39, 0x0a, 0x0b, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2a, 0xd1, 0x08, 0x0a, 0x0e, 0x41, 0x50, 0x49, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x0b, 0x42, 0x41, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x10, 0x00, 0x1a, 0x04, 0xa8, 0x45, 0x90, 0x03, 0x12, 0x1f, 0x0a, 0x15, 0x41,
	0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x01, 0x1a, 0x04, 0xa8, 0x45, 0x91, 0x03, 0x12, 0x1e, 0x0a, 0x14,
	0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x1a, 0x04, 0xa8, 0x45, 0x93, 0x03, 0x12, 0x13, 0x0a, 0x09,
	0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x03, 0x1a, 0x04, 0xa8, 0x45, 0x94,
	0x03, 0x12, 0x1c, 0x0a, 0x12, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45, 0x44, 0x10, 0x04, 0x1a, 0x04, 0xa8, 0x45, 0x95, 0x03, 0x12,
	0x18, 0x0a, 0x0e, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x10, 0x05, 0x1a, 0x04, 0xa8, 0x45, 0x96, 0x03, 0x12, 0x19, 0x0a, 0x0f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55, 0x54, 0x10, 0x06, 0x1a, 0x04,
	0xa8, 0x45, 0x98, 0x03, 0x12, 0x12, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x46, 0x4c, 0x49, 0x43, 0x54,
	0x10, 0x07, 0x1a, 0x04, 0xa8, 0x45, 0x99, 0x03, 0x12, 0x0e, 0x0a, 0x04, 0x47, 0x4f, 0x4e, 0x45,
	0x10, 0x08, 0x1a, 0x04, 0xa8, 0x45, 0x9a, 0x03, 0x12, 0x19, 0x0a, 0x0f, 0x4c, 0x45, 0x4e, 0x47,
	0x54, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x09, 0x1a, 0x04, 0xa8,
	0x45, 0x9b, 0x03, 0x12, 0x1d, 0x0a, 0x13, 0x50, 0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0a, 0x1a, 0x04, 0xa8, 0x45,
	0x9c, 0x03, 0x12, 0x22, 0x0a, 0x18, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x45, 0x4e,
	0x54, 0x49, 0x54, 0x59, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x0b,
	0x1a, 0x04, 0xa8, 0x45, 0x9d, 0x03, 0x12, 0x1e, 0x0a, 0x14, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x5f, 0x55, 0x52, 0x49, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x4f, 0x4e, 0x47, 0x10, 0x0c,
	0x1a, 0x04, 0xa8, 0x45, 0x9e, 0x03, 0x12, 0x20, 0x0a, 0x16, 0x55, 0x4e, 0x53, 0x55, 0x50, 0x50,
	0x4f, 0x52, 0x54, 0x45, 0x44, 0x5f, 0x4d, 0x45, 0x44, 0x49, 0x41, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x10, 0x0d, 0x1a, 0x04, 0xa8, 0x45, 0x9f, 0x03, 0x12, 0x29, 0x0a, 0x1f, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x53, 0x41, 0x54, 0x49, 0x53, 0x46, 0x49, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x0e, 0x1a, 0x04, 0xa8,
	0x45, 0xa0, 0x03, 0x12, 0x1c, 0x0a, 0x12, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0xa1,
	0x03, 0x12, 0x1d, 0x0a, 0x13, 0x4d, 0x49, 0x53, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x10, 0x1a, 0x04, 0xa8, 0x45, 0xa5, 0x03,
	0x12, 0x1e, 0x0a, 0x14, 0x55, 0x4e, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x41, 0x42, 0x4c,
	0x45, 0x5f, 0x45, 0x4e, 0x54, 0x49, 0x54, 0x59, 0x10, 0x11, 0x1a, 0x04, 0xa8, 0x45, 0xa6, 0x03,
	0x12, 0x10, 0x0a, 0x06, 0x4c, 0x4f, 0x43, 0x4b, 0x45, 0x44, 0x10, 0x12, 0x1a, 0x04, 0xa8, 0x45,
	0xa7, 0x03, 0x12, 0x1b, 0x0a, 0x11, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x5f, 0x44, 0x45, 0x50,
	0x45, 0x4e, 0x44, 0x45, 0x4e, 0x43, 0x59, 0x10, 0x13, 0x1a, 0x04, 0xa8, 0x45, 0xa8, 0x03, 0x12,
	0x1a, 0x0a, 0x10, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49,
	0x52, 0x45, 0x44, 0x10, 0x14, 0x1a, 0x04, 0xa8, 0x45, 0xaa, 0x03, 0x12, 0x1f, 0x0a, 0x15, 0x50,
	0x52, 0x45, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55,
	0x49, 0x52, 0x45, 0x44, 0x10, 0x15, 0x1a, 0x04, 0xa8, 0x45, 0xac, 0x03, 0x12, 0x1b, 0x0a, 0x11,
	0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x41, 0x4e, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x53, 0x10, 0x16, 0x1a, 0x04, 0xa8, 0x45, 0xad, 0x03, 0x12, 0x29, 0x0a, 0x1f, 0x52, 0x45, 0x51,
	0x55, 0x45, 0x53, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x53, 0x5f, 0x54, 0x4f, 0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0x17, 0x1a, 0x04,
	0xa8, 0x45, 0xaf, 0x03, 0x12, 0x27, 0x0a, 0x1d, 0x55, 0x4e, 0x41, 0x56, 0x41, 0x49, 0x4c, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x4c, 0x45, 0x47, 0x41, 0x4c, 0x5f, 0x52, 0x45,
	0x41, 0x53, 0x4f, 0x4e, 0x53, 0x10, 0x18, 0x1a, 0x04, 0xa8, 0x45, 0xc3, 0x03, 0x12, 0x1f, 0x0a,
	0x15, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x19, 0x1a, 0x04, 0xa8, 0x45, 0xf4, 0x03, 0x12, 0x19,
	0x0a, 0x0f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x45,
	0x44, 0x10, 0x1a, 0x1a, 0x04, 0xa8, 0x45, 0xf5, 0x03, 0x12, 0x15, 0x0a, 0x0b, 0x42, 0x41, 0x44,
	0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x10, 0x1b, 0x1a, 0x04, 0xa8, 0x45, 0xf6, 0x03,
	0x12, 0x1d, 0x0a, 0x13, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x1c, 0x1a, 0x04, 0xa8, 0x45, 0xf7, 0x03, 0x12,
	0x19, 0x0a, 0x0f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41, 0x59, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x10, 0x1d, 0x1a, 0x04, 0xa8, 0x45, 0xf8, 0x03, 0x12, 0x24, 0x0a, 0x1a, 0x48, 0x54,
	0x54, 0x50, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x55, 0x50, 0x50, 0x4f, 0x52, 0x54, 0x45, 0x44, 0x10, 0x1e, 0x1a, 0x04, 0xa8, 0x45, 0xf9, 0x03,
	0x12, 0x21, 0x0a, 0x17, 0x56, 0x41, 0x52, 0x49, 0x41, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x53, 0x4f,
	0x5f, 0x4e, 0x45, 0x47, 0x4f, 0x54, 0x49, 0x41, 0x54, 0x45, 0x53, 0x10, 0x1f, 0x1a, 0x04, 0xa8,
	0x45, 0xfa, 0x03, 0x12, 0x1e, 0x0a, 0x14, 0x49, 0x4e, 0x53, 0x55, 0x46, 0x46, 0x49, 0x43, 0x49,
	0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x4f, 0x52, 0x41, 0x47, 0x45, 0x10, 0x20, 0x1a, 0x04, 0xa8,
	0x45, 0xfb, 0x03, 0x12, 0x17, 0x0a, 0x0d, 0x4c, 0x4f, 0x4f, 0x50, 0x5f, 0x44, 0x45, 0x54, 0x45,
	0x43, 0x54, 0x45, 0x44, 0x10, 0x21, 0x1a, 0x04, 0xa8, 0x45, 0xfc, 0x03, 0x12, 0x16, 0x0a, 0x0c,
	0x4e, 0x4f, 0x54, 0x5f, 0x45, 0x58, 0x54, 0x45, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x22, 0x1a, 0x04,
	0xa8, 0x45, 0xfe, 0x03, 0x12, 0x29, 0x0a, 0x1f, 0x4e, 0x45, 0x54, 0x57, 0x4f, 0x52, 0x4b, 0x5f,
	0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x44, 0x10, 0x23, 0x1a, 0x04, 0xa8, 0x45, 0xff, 0x03, 0x1a,
	0x04, 0xa0, 0x45, 0xf4, 0x03, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x65, 0x73, 0x6f, 0x70, 0x65, 0x72, 0x31, 0x30, 0x31, 0x2f, 0x6b,
	0x72, 0x61, 0x74, 0x6f, 0x73, 0x2d, 0x75, 0x74, 0x69, 0x6c, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x70,
	0x62, 0x3b, 0x68, 0x74, 0x74, 0x70, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_goTypes = []interface{}{
	(APIErrorReason)(0),           // 0: kratos.http.APIErrorReason
	(*OperationResponse)(nil),     // 1: kratos.http.OperationResponse
	(*FuzzySearchRequest)(nil),    // 2: kratos.http.FuzzySearchRequest
	(*AdvancedFilterRequest)(nil), // 3: kratos.http.AdvancedFilterRequest
	(*SortRequest)(nil),           // 4: kratos.http.SortRequest
	(*anypb.Any)(nil),             // 5: google.protobuf.Any
}
var file_api_proto_depIdxs = []int32{
	5, // 0: kratos.http.AdvancedFilterRequest.value:type_name -> google.protobuf.Any
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FuzzySearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdvancedFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SortRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
